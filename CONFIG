#!/usr/bin/env pil

(setq *TheScript (text "@1@2" (car (file)) (cadr (file))))

(if (> (native "@" "readlink" 'N *TheScript '(Buf (4096 C . 4096 )) 4096) 0)
	(setq *InstallDir (dirname (glue "" Buf)))
	(setq *InstallDir (car (file))) )

(setq ConfigFile (text "@1@2" *InstallDir "config.rc"))

(when (= (argv) '("-h"))
	(prinl "Usage: ./MY_SWARM_CONFIG DIRECTORY HOST [PORT]")
	(prinl "Usage: ./MY_SWARM_CONFIG --delete DIRECTORY")
	(bye) )


(when (= (car (argv)) "--delete")

	(let (FoundRcd () TheDir (cadr (argv)))
		(rc ConfigFile 'Servers
			(prog1
				(filter
					'((Rcd TheDir)
						(if (<> (car Rcd) TheDir)
							Rcd
							(nil (setq FoundRcd Rcd))) )
					(rc ConfigFile 'Servers)
					TheDir )
				(if FoundRcd
					(prinl "Server \"" TheDir "\" had host \"" (cadr FoundRcd) \"" port \"" (caddr FoundRcd) "\", deleting from config")
					(prinl "No matching server found for dir \"" TheDir "\"")
					(bye 1) ) ) ) )
	(bye) )


(setq Servers (rc ConfigFile 'Servers))
(setq NewRecord ())

(when (= (length (argv)) 2)
	(setq NewRecord (argv))
	(prin "port number: ")(flush)
	(setq P (glue "" (trim (in "/dev/stdin" (line NIL)))))
	(setq NewRecord (append NewRecord (list P))) )

(when (= (length (argv)) 3)
	(setq NewRecord (argv)) )

(when NewRecord
	(push 'Servers NewRecord) )

(mapcar
	'((Group)
		(when (> (length Group) 1)
			(prinl "Fatal error: conflicting ports")
			(prinl (; Group 1))
			(prinl (; Group 2))
			(bye) ) )
	(by caddr group Servers))

(when NewRecord
	(rc ConfigFile 'Servers Servers) )

(mapcar
	'((Rcd)
		(prinl (; Rcd 3) "\t" (; Rcd 2) ":" (; Rcd 1)) )
	(by caddr sort Servers) )

(call "./my-swarm-manager.git/LIST")

(bye)
